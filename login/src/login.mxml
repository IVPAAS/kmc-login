<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="init()" layout="absolute"
				preloader="com.kaltura.preloaders.KmcPreloader" backgroundColor="#034F57" horizontalScrollPolicy="off"
				verticalScrollPolicy="off" backgroundAlpha="0" backgroundGradientAlphas="0,0">

	<mx:Script>
		<![CDATA[
			import com.kaltura.KalturaClient;
			import com.kaltura.analytics.GoogleAnalyticsConsts;
			import com.kaltura.analytics.GoogleAnalyticsTracker;
			import com.kaltura.analytics.KAnalyticsTracker;
			import com.kaltura.commands.adminUser.AdminUserLogin;
			import com.kaltura.commands.adminUser.AdminUserSetInitialPwd;
			import com.kaltura.config.KalturaConfig;
			import com.kaltura.controls.kobjecthadles.events.SelectionKohEvent;
			import com.kaltura.events.KalturaEvent;
			import com.kaltura.types.KalturaStatsKmcEventType;
			import com.kaltura.utils.KUtils;
			import com.kaltura.utils.SoManager;
			import com.kaltura.vo.KalturaStatsKmcEvent;
			
			import flash.external.ExternalInterface;
			
			import mx.controls.Alert;
			import mx.core.UITextField;
			import mx.events.ValidationResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.URLUtil;
			import mx.validators.ValidationResult;
			import mx.validators.Validator;


			// =====================================================
			// members
			// =====================================================
			private static const KALTURA_SERVICES_URL:String = "index.php/partnerservices2";
			private static const VERSION:String = "1.1";

			private const LBL_WIDTH:Number = 100;

			/**
			 * google analytics id
			 * */
			private var _urchinNumber:String;

			/**
			 * name of JS function to call when closing login window
			 * */
			private var _closeF:String = "closeF";

			/**
			 * name of JS function to call when login returned successfully
			 * */
			private var _loginF:String = "loginF";

			/**
			 * client for posting API_v3 calls
			 * */
			private var _kc:KalturaClient;

			[Bindable]
			/**
			 * dommain for partnerservices2 calls
			 * */
			private var _domain:String = "http://www.kaltura.com";

			/**
			 * users coming form registration email will have a hash
			 * key idetifying them.
			 * */
			private var _hashKey:String = "";


			// =====================================================
			// methods
			// =====================================================

			/**
			 * save parameters values to variables and initialize screen
			 * */
			private function init():void {
				Security.allowDomain('*');

				// create client for API_v3 calls
				var configuration:KalturaConfig = new KalturaConfig();
				configuration.domain = "http://" + KUtils.hostFromCode(parameters.host);
				configuration.srvUrl = parameters.srvurl;
				_kc = new KalturaClient(configuration);

				// add context menu item
				var item:ContextMenuItem = new ContextMenuItem("KMC LOGIN VERSION " + VERSION);
				this.contextMenu.customItems.push(item);

				// app parameters:
				_urchinNumber = parameters.urchinNumber

				if (this.parameters.host) {
					if (URLUtil.isHttpURL(String(this.parameters.host)) || URLUtil.isHttpsURL(String(this.parameters.host)))
						_domain = this.parameters.host;
					else
						_domain = "http://" + KUtils.hostFromCode(parameters.host);
				}

				if (this.parameters.closeF)
					_closeF = parameters.closeF;
				if (this.parameters.loginF)
					_loginF = parameters.loginF;

				// new user / existing user?
				if (parameters.hashKey != null) {
					_hashKey = parameters.hashKey;
					panels.selectedChild = newPwdPanel;
				}
			}


			/**
			 * "normal" login
			 * */
			private function adminLogin():void {
				var ga:GoogleAnalyticsTracker = GoogleAnalyticsTracker.getInstance();
				ga.init("", "", this, "KMC_ANDROMEDA/Login", _urchinNumber, "AS3", Application.application.parameters.gaDebug == "true" ? true : false);
				GoogleAnalyticsTracker.getInstance().sendToGA(GoogleAnalyticsConsts.LOGIN);
				var ka:KAnalyticsTracker = KAnalyticsTracker.getInstance();
				ka.init(_kc, "Login", VERSION, "");
				KAnalyticsTracker.getInstance().sendEvent(KalturaStatsKmcEventType.LOGIN, "pagingInEntryTable>Manage");

				if (!validateTextField(email, resourceManager.getString('kmc', 'enterEmail'), emailValidator))
					return;
				if (!validateTextField(password, resourceManager.getString('kmc', 'enterPassword'), passwordValidator))
					return;

				// post request:
				var params:Object = new Object();
				params.email = email.text;
				params.password = password.text;
				loginSrv.send(params);

//TODO for API_V3
//				var aul:AdminUserLogin = new AdminUserLogin(email.text, password.text);
//				aul.addEventListener(KalturaEvent.COMPLETE, onLoginResult);
//				aul.addEventListener(KalturaEvent.FAILED, onLoginFault);
//				_kc.post(aul);
			}


			protected function setInitialPwd():void {
				//TODO track analytics?
				
				// validate
				if (pwd1.text != pwd2.text) {
					return;
					//TODO say something
				}
				if (!validateTextField(pwd1, resourceManager.getString('kmc', 'enterPassword'), passwordValidator)) {
					return;
				}
				if (!validateTextField(pwd2, resourceManager.getString('kmc', 'enterPassword'), passwordValidator)) {
					return;
				}
				
				
				// post request
				var ausip:AdminUserSetInitialPwd = new AdminUserSetInitialPwd(_hashKey, pwd1.text);
				ausip.addEventListener(KalturaEvent.COMPLETE, onSetInitialResult);
				ausip.addEventListener(KalturaEvent.FAILED, faultHandlerV3);
				_kc.post(ausip);
				
			}


			private function removeMe():void {
				ExternalInterface.call(_closeF);
			}


			private function loginF(partner_id:String, subp_id:String, uid:String, ks:String, screenName:String, uemail:String):void

			{
				SoManager.getInstance().getLocalData("login", uid);

				if (!SoManager.getInstance().checkOrFlush(GoogleAnalyticsConsts.LOGIN_FIRST_TIME)) {
					GoogleAnalyticsTracker.getInstance().init(partner_id, uid, this, "KMC_ANDROMEDA/Login", _urchinNumber, "AS3", Application.application.parameters.gaDebug == "true" ? true : false);
					GoogleAnalyticsTracker.getInstance().sendToGA(GoogleAnalyticsConsts.LOGIN_FIRST_TIME);
				}
				ExternalInterface.call(_loginF, remember.selected, partner_id, subp_id, uid, ks, screenName, uemail);
			}


			private function validateTextField(target:Object, defaultString:String, validator:Validator):Boolean {
				cleanField(target, defaultString);
				validator.source = target;

				var vre:ValidationResultEvent = validator.validate();
				return !(vre.results && (vre.results[0] as ValidationResult).isError);
			}



			private function cleanField(textField:Object, defaultText:String):void {
				//TestInput is not related to TextArea
				if (textField is UITextField || textField is TextInput) {
					if (textField["text"] == defaultText)
						textField["text"] = "";
				}
			}


			/**
			 * restores the default text to the given textfield
			 * @param textField	the textfield
			 * @param defaultText	the text to plae in the textfield
			 * */
			private function restoreField(textField:Object, defaultText:String):void {
				if (textField is UITextField || textField is TextInput) {
					if (textField["text"] == "")
						textField["text"] = defaultText;
				}
			}


			/**
			 * send a request to recover pasword
			 * */
			private function resetPassword():void {
				if (!validateTextField(email2, resourceManager.getString('kmc', 'enterEmail'), emailValidator))
					return;

				var params:Object = new Object();
				params.email = email2.text;
				resetPasswordSrv.send(params);
			}


			/**
			 * login successful - call JS function with relevant data
			 * */
			private function onLoginResult(event:ResultEvent):void {
				if (event.result.result.hasOwnProperty('ks')) {
					loginF(event.result.result.partner_id, event.result.result.subp_id, event.result.result.uid, event.result.result.ks, event.result.result.screenName, event.result.result.email);
				}
				else {
					if (event.result && event.result.error && event.result.error.num_0.desc) {
						Alert.show(event.result.error.num_0.desc);
					}
				}
			}
			
			/**
			 * set intial password successfull
			 * show normal login panel
			 * */
			protected function onSetInitialResult(event:KalturaEvent):void {
				panels.selectedChild = loginPanel;
			}


			/**
			 * general fault handler for API_v3
			 * */
			private function faultHandlerV3(event:KalturaEvent):void {
				//TODO show a message from locale
				Alert.show(event.error.errorMsg);
			}
			

			/**
			 * general fault handler for PS2
			 * */
			private function faultHandler(event:FaultEvent):void {
				Alert.show(resourceManager.getString('kmc', 'errorOccurred: ' + event.message));
			}


			private function onResetPassResult(event:ResultEvent):void {
				if (event.result.error.hasOwnProperty('num_0'))
					Alert.show(event.result.error.num_0.desc);
				else
					Alert.show(resourceManager.getString('kmc', 'resetMess', [email2.text]));
			}



			/**
			 * hide / show forget password panel
			 * */
			protected function toggleForgotPassword():void {
				if (panels.selectedChild == forgetPwdPanel) {
					panels.selectedChild = loginPanel;
				}
				else {
					panels.selectedChild = forgetPwdPanel;
				}
			}


			protected function removeDefaultText(event:FocusEvent):void {
				cleanField(event.target as UITextField, resourceManager.getString('kmc', 'enterPassword'));
				password.displayAsPassword = true;
			}


			protected function resetDefaultText(event:FocusEvent):void {
				restoreField(event.target, resourceManager.getString('kmc', 'enterPassword'));
				if (password.text == resourceManager.getString('kmc', 'enterPassword') || password.text == '') {
					password.displayAsPassword = false;
				}
			}
		]]>
	</mx:Script>

	<mx:Style source="assets/kaltura.css"/>

	<mx:Metadata>
		[ResourceBundle("kmc")]
	</mx:Metadata>

	<!-- Validators -->
	<mx:StringValidator id="passwordValidator" required="true" property="text" minLength="1" maxLength="200"/>
	<mx:EmailValidator id="emailValidator" required="true" property="text"/>

	<!-- services -->
	<mx:HTTPService id="loginSrv" url="{_domain}/{KALTURA_SERVICES_URL}/adminlogin" method="POST" resultFormat="e4x"
					showBusyCursor="true" result="onLoginResult( event )" fault="faultHandler( event )"/>

	<mx:HTTPService id="resetPasswordSrv" url="{_domain}/{KALTURA_SERVICES_URL}/resetadminpassword" method="POST"
					resultFormat="e4x" showBusyCursor="true" result="onResetPassResult( event )"
					fault="faultHandler( event )"/>

	<!-- UI -->
	<mx:TitleWindow id="loginWin" width="380" height="220" horizontalScrollPolicy="off" verticalScrollPolicy="off"
					title="{resourceManager.getString('kmc', 'login')}" horizontalCenter="0" verticalCenter="0"
					showCloseButton="false" keyDown="{if(event.keyCode == Keyboard.ENTER)adminLogin();}">

		<mx:ViewStack id="panels" width="100%" height="100%">
			<!-- login details -->
			<mx:VBox id="loginPanel" width="100%" height="100%">
				<mx:HBox>
					<mx:Label width="{LBL_WIDTH}" text="{resourceManager.getString('kmc', 'email')}:"/>
					<mx:TextInput id="email"
								  creationComplete="restoreField( event.target , resourceManager.getString('kmc', 'enterEmail'))"
								  focusIn="{cleanField( event.target as UITextField, resourceManager.getString('kmc', 'enterEmail'))}"
								  focusOut="{restoreField( event.target , resourceManager.getString('kmc', 'enterEmail'))}"/>
				</mx:HBox>
				<mx:HBox>
					<mx:Label width="{LBL_WIDTH}" text="{resourceManager.getString('kmc', 'password')}"/>
					<mx:TextInput id="password"
								  creationComplete="restoreField( event.target , resourceManager.getString('kmc', 'enterPassword'))"
								  focusIn="removeDefaultText(event)" focusOut="resetDefaultText(event)"/>
				</mx:HBox>
				<!-- remember me checkbox -->
				<mx:CheckBox id="remember" label="{resourceManager.getString('kmc', 'rememberMe')}"/>
			</mx:VBox>

			<!-- forgot password section -->
			<mx:VBox id="forgetPwdPanel" width="100%" height="100%">
				<mx:Label text="{resourceManager.getString('kmc', 'forgotPassword')}"/>
				<mx:Text id="forgotPwdTxt" width="95%"
						 htmlText="{resourceManager.getString('kmc', 'forgotPasswordText')}"/>
				<mx:HBox verticalAlign="middle" width="100%">
					<mx:Label text="{resourceManager.getString('kmc', 'email')}:"/>
					<mx:TextInput id="email2"
								  creationComplete="restoreField( event.target , resourceManager.getString('kmc', 'enterEmail'))"
								  focusIn="{ cleanField( event.target as UITextField, resourceManager.getString('kmc', 'enterEmail')) }"
								  focusOut="{ restoreField( event.target , resourceManager.getString('kmc', 'enterEmail')) }"/>
				</mx:HBox>
			</mx:VBox>

			<!-- new user (HBO) -->
			<mx:VBox id="newPwdPanel" width="100%" height="100%">
				<mx:HBox width="100%">
					<mx:Label text="new password:" width="{LBL_WIDTH}"/>
					<mx:TextInput id="pwd1" width="100%"/>
				</mx:HBox>
				<mx:HBox width="100%">
					<mx:Label text="again:" width="{LBL_WIDTH}"/>
					<mx:TextInput id="pwd2" width="100%"/>
				</mx:HBox>
			</mx:VBox>

		</mx:ViewStack>


		<!-- toolbar -->
		<mx:ControlBar>
			<mx:LinkButton label="{resourceManager.getString('kmc', 'forgotPassword')}"
						   click="toggleForgotPassword()" buttonMode="true"/>
			<mx:VRule height="10" visible="{Application.application.parameters.visibleSignup=='true'}"/>
			<mx:LinkButton label="{resourceManager.getString('kmc', 'signup')}"
						   click="{ExternalInterface.call('gotoSignup')}" buttonMode="true"
						   visible="{Application.application.parameters.visibleSignup=='true'}"/>
			<mx:Spacer width="100%"/>
			<mx:Button label="{resourceManager.getString('kmc', 'login')}" buttonMode="true"
					   click="adminLogin()" visible="{panels.selectedChild == loginPanel}"
					   includeInLayout="{panels.selectedChild == loginPanel}"/>
			<mx:Button label="{resourceManager.getString('kmc', 'send')}" buttonMode="true"
					   click="resetPassword()" visible="{panels.selectedChild == forgetPwdPanel}"
					   includeInLayout="{panels.selectedChild == forgetPwdPanel}"/>
			<mx:Button label="Submit" buttonMode="true"
					   click="setInitialPwd()" visible="{panels.selectedChild == newPwdPanel}"
					   includeInLayout="{panels.selectedChild == newPwdPanel}"/>
		</mx:ControlBar>
	</mx:TitleWindow>
	
</mx:Application>
